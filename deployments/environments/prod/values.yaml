# Default values for backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

images:
  nginx:
    name: nginx
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 1000m
  app:
    name: app
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 1000m

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
  hosts:
    - host: backend.defihelper.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: backend-tls
      hosts:
        - backend.defihelper.io

broker:
  maxReplicas: 10
  maxReadyMessagesForHpa: 100
  process:
    labels:
      app: app
      component: broker
      environment: prod
      queue: process
    queues:
      queue:
        name: queue
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue-consume -- -q tasks_default"'
        replicas: 1
        resources:
          requests:
            memory: 1024Mi
            cpu: 500m
          limits:
            memory: 2048Mi
            cpu: 800m
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      metrics:
        name: metrics
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue-consume -- -q tasks_metricCurrent"'
        replicas: 1
        resources:
          requests:
            memory: 1024Mi
            cpu: 500m
          limits:
            memory: 2048Mi
            cpu: 800m
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      history:
        name: history
        command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue-consume -- -q tasks_metricHistory"'
        replicas: 1
        resources:
          requests:
            memory: 1024Mi
            cpu: 500m
          limits:
            memory: 2048Mi
            cpu: 800m
        nodeSelector:
          group_name: "apps-jobs"
        tolerations:
          - key: node-role.kubernetes.io/apps-jobs
            operator: "Equal"
            value: "true"
            effect: NoSchedule


handlers:
  nodeSelector:
    group_name: "apps-jobs"
  tolerations:
    - key: node-role.kubernetes.io/apps-jobs
      operator: "Equal"
      value: "true"
      effect: NoSchedule
  labels:
    app: backend
    component: cronHandler
    environment: prod
  resources:
    requests:
      memory: 128Mi
      cpu: 200m
    limits:
      memory: 256Mi
      cpu: 300m
  schedules:
    queue-deferred:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run queue-deferred"'
      schedule: "* * * * *"
    minute10:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run schedule -- --period minute10"'
      schedule: "*/10 * * * *"
    hour:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run schedule -- --period hourStart"'
      schedule: "0 * * * *"
    day:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run schedule -- --period dayStart"'
      schedule: "0 0 * * *"
    week:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run schedule -- --period weekStart"'
      schedule: "0 0 * * 0"
    month:
      command: '"/bin/sh","-c","ln -s ./configuration/.env ./.env && npm run schedule -- --period monthStart"'
      schedule: "0 0 1 * *"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
nodeSelector:
  group_name: "apps-web"
tolerations:
  - key: node-role.kubernetes.io/apps-web
    operator: "Equal"
    value: "true"
    effect: NoSchedule
affinity: {}
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
